{"version":3,"file":"PostProcessingStage.js","sourceRoot":"","sources":["../../../../../lib/processors/background/pipelines/backgroundprocessorpipeline/PostProcessingStage.ts"],"names":[],"mappings":";;;AAEA,0EAAyE;AAEzE;;GAEG;AACH;IAQE,6BACE,eAA2B,EAC3B,YAA6B,EAC7B,YAA6B,EAC7B,cAAsB,EACtB,aAAgD;QAT1C,+BAA0B,GAAqC,IAAI,CAAC;QAW1E,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACtC,CAAC;IAED,oCAAM,GAAN,UACE,UAAsB,EACtB,UAAqB;QAEf,IAAA,KAIF,IAAI,EAHN,cAAc,oBAAA,EACd,cAAc,oBAAA,EACd,aAAa,mBACP,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE;YACpC,IAAI,CAAC,8BAA8B,EAAE,CAAC;SACvC;QACD,IAAI,CAAC,0BAA2B,CAAC,MAAM,CACrC,UAAU,EACV,UAAU,CACX,CAAC;QACF,cAAc,CAAC,IAAI,EAAE,CAAC;QACtB,cAAc,CAAC,wBAAwB,GAAG,MAAM,CAAC;QACjD,cAAc,CAAC,SAAS,CACtB,aAAa,EACb,CAAC,EACD,CAAC,CACF,CAAC;QACF,cAAc,CAAC,wBAAwB,GAAG,kBAAkB,CAAC;QAC7D,cAAc,CAAC,UAAU,CAAC,CAAC;QAC3B,cAAc,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,4DAA8B,GAA9B;;QACQ,IAAA,KAIF,IAAI,EAHN,gBAAgB,sBAAA,EAChB,eAAe,qBAAA,EACf,aAAa,mBACP,CAAC;QACT,MAAA,IAAI,CAAC,0BAA0B,0CAAE,OAAO,EAAE,CAAC;QAC3C,IAAI,CAAC,0BAA0B,GAAG,IAAI,qDAAyB,CAC7D,gBAAgB,EAChB,aAAa,CACd,CAAC;QACF,IAAI,CAAC,0BAA0B,CAAC,2BAA2B,CAAC;YAC1D,UAAU,EAAE,eAAe;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,kDAAoB,GAApB,UAAqB,MAAc;;QACjC,IAAI,IAAI,CAAC,eAAe,KAAK,MAAM,EAAE;YACnC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,MAAA,IAAI,CAAC,0BAA0B,0CAC3B,2BAA2B,CAAC;gBAC5B,UAAU,EAAE,MAAM;aACnB,CAAC,CAAC;SACN;IACH,CAAC;IACH,0BAAC;AAAD,CAAC,AA3ED,IA2EC;AA3EY,kDAAmB","sourcesContent":["import { Dimensions, InputFrame } from '../../../../types';\nimport { Pipeline } from '../../../pipelines';\nimport { PersonMaskUpscalePipeline } from '../personmaskupscalepipeline';\n\n/**\n * @private\n */\nexport class PostProcessingStage implements Pipeline.Stage {\n  private readonly _inputDimensions: Dimensions;\n  private _maskBlurRadius: number;\n  private readonly _outputContext: OffscreenCanvasRenderingContext2D;\n  private _personMaskUpscalePipeline: PersonMaskUpscalePipeline | null = null;\n  private readonly _setBackground: (inputFrame?: InputFrame) => void;\n  private readonly _webgl2Canvas: OffscreenCanvas;\n\n  constructor(\n    inputDimensions: Dimensions,\n    webgl2Canvas: OffscreenCanvas,\n    outputCanvas: OffscreenCanvas,\n    maskBlurRadius: number,\n    setBackground: (inputFrame?: InputFrame) => void\n  ) {\n    this._inputDimensions = inputDimensions;\n    this._maskBlurRadius = maskBlurRadius;\n    this._outputContext = outputCanvas.getContext('2d')!;\n    this._webgl2Canvas = webgl2Canvas;\n    this._setBackground = setBackground;\n  }\n\n  render(\n    inputFrame: InputFrame,\n    personMask: ImageData\n  ): void {\n    const {\n      _outputContext,\n      _setBackground,\n      _webgl2Canvas\n    } = this;\n    if (!this._personMaskUpscalePipeline) {\n      this.resetPersonMaskUpscalePipeline();\n    }\n    this._personMaskUpscalePipeline!.render(\n      inputFrame,\n      personMask\n    );\n    _outputContext.save();\n    _outputContext.globalCompositeOperation = 'copy';\n    _outputContext.drawImage(\n      _webgl2Canvas,\n      0,\n      0\n    );\n    _outputContext.globalCompositeOperation = 'destination-over';\n    _setBackground(inputFrame);\n    _outputContext.restore();\n  }\n\n  resetPersonMaskUpscalePipeline(): void {\n    const {\n      _inputDimensions,\n      _maskBlurRadius,\n      _webgl2Canvas\n    } = this;\n    this._personMaskUpscalePipeline?.cleanUp();\n    this._personMaskUpscalePipeline = new PersonMaskUpscalePipeline(\n      _inputDimensions,\n      _webgl2Canvas\n    );\n    this._personMaskUpscalePipeline.updateBilateralFilterConfig({\n      sigmaSpace: _maskBlurRadius\n    });\n  }\n\n  updateMaskBlurRadius(radius: number): void {\n    if (this._maskBlurRadius !== radius) {\n      this._maskBlurRadius = radius;\n      this._personMaskUpscalePipeline\n        ?.updateBilateralFilterConfig({\n          sigmaSpace: radius\n        });\n    }\n  }\n}\n"]}