{"version":3,"file":"VirtualBackgroundProcessorPipeline.proxy.js","sourceRoot":"","sources":["../../../../../lib/processors/background/pipelines/backgroundprocessorpipeline/VirtualBackgroundProcessorPipeline.proxy.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAiD;AACjD,mDAA4F;AAC5F,2DAA0D;AAE1D,yFAAuF;AAGvF,IAAI,wCAA2F,CAAC;AAEhG;;GAEG;AACH;IAA6D,2DAAgC;IAG3F,iDACE,OAAkD;QADpD,iBAYC;QATC,IAAM,UAAU,GAAG,IAAI,uBAAU,CAC/B,UAAG,OAAO,CAAC,UAAU,SAAG,+DAAmD,CAAE,CAC9E,CAAC;QACF,IAAM,qBAAqB,GAAG,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAC,MAAM;YACjE,wCAAwC,KAAxC,wCAAwC,GAAK,IAAA,cAAI,EAA4C,MAAM,CAAC,EAAC;YACrG,OAAO,IAAI,wCAAwC,CAAC,OAAO,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;gBACH,kBAAM,qBAAqB,CAAC;QAC5B,KAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;;IACtD,CAAC;IAEK,oEAAkB,GAAxB,UAAyB,eAA4B;;;;;4BAC5B,qBAAM,IAAI,CAAC,sBAAsB,EAAA;;wBAAlD,cAAc,GAAG,SAAiC;wBACxD,sBAAO,cAAc,CAAC,kBAAkB,CACtC,IAAA,kBAAQ,EAAC,eAAe,EAAE,CAAC,eAAe,CAAC,CAAC,CAC7C,EAAC;;;;KACH;IAEK,4DAAU,GAAhB,UAAiB,OAAiB;;;;;4BACT,qBAAM,IAAI,CAAC,sBAAsB,EAAA;;wBAAlD,cAAc,GAAG,SAAiC;wBACxD,sBAAO,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC;;;;KAC3C;IACH,8CAAC;AAAD,CAAC,AA5BD,CAA6D,oEAAgC,GA4B5F;AA5BY,0FAAuC","sourcesContent":["import { Remote, transfer, wrap } from 'comlink';\nimport { TWILIO_VIRTUAL_BACKGROUND_PROCESSOR_PIPELINE_WORKER } from '../../../../constants';\nimport { CorsWorker } from '../../../../utils/CorsWorker';\nimport { ImageFit } from '../../../../types';\nimport { BackgroundProcessorPipelineProxy } from './BackgroundProcessorPipeline.proxy';\nimport { VirtualBackgroundProcessorPipeline, VirtualBackgroundProcessorPipelineOptions } from './VirtualBackgroundProcessorPipeline';\n\nlet VirtualBackgroundProcessorPipelineWorker: Remote<typeof VirtualBackgroundProcessorPipeline>;\n\n/**\n * @private\n */\nexport class VirtualBackgroundProcessorPipelineProxy extends BackgroundProcessorPipelineProxy {\n  protected readonly _pipelineWorkerPromise: Promise<Remote<VirtualBackgroundProcessorPipeline>>;\n\n  constructor(\n    options: VirtualBackgroundProcessorPipelineOptions\n  ) {\n    const corsWorker = new CorsWorker(\n      `${options.assetsPath}${TWILIO_VIRTUAL_BACKGROUND_PROCESSOR_PIPELINE_WORKER}`\n    );\n    const pipelineWorkerPromise = corsWorker.workerPromise.then((worker) => {\n      VirtualBackgroundProcessorPipelineWorker ||= wrap<typeof VirtualBackgroundProcessorPipeline>(worker);\n      return new VirtualBackgroundProcessorPipelineWorker(options);\n    });\n    super(pipelineWorkerPromise);\n    this._pipelineWorkerPromise = pipelineWorkerPromise;\n  }\n\n  async setBackgroundImage(backgroundImage: ImageBitmap): Promise<void> {\n    const pipelineWorker = await this._pipelineWorkerPromise;\n    return pipelineWorker.setBackgroundImage(\n      transfer(backgroundImage, [backgroundImage])\n    );\n  }\n\n  async setFitType(fitType: ImageFit): Promise<void> {\n    const pipelineWorker = await this._pipelineWorkerPromise;\n    return pipelineWorker.setFitType(fitType);\n  }\n}\n"]}