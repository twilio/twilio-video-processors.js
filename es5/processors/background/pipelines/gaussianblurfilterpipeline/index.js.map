{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/processors/background/pipelines/gaussianblurfilterpipeline/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,gDAAoD;AACpD,yFAAwF;AAExF;;GAEG;AACH;IAAgD,8CAAc;IAC5D,oCAAY,YAAiD;QAA7D,YACE,iBAAO,SAkBR;QAhBC,IAAM,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,CAA4B,CAAC;QAE3E,KAAI,CAAC,QAAQ,CAAC,IAAI,qEAAiC,CACjD,KAAK,EACL,YAAY,EACZ,SAAS,EACT,CAAC,EACD,CAAC,CACF,CAAC,CAAC;QAEH,KAAI,CAAC,QAAQ,CAAC,IAAI,qEAAiC,CACjD,KAAK,EACL,UAAU,EACV,QAAQ,EACR,CAAC,CACF,CAAC,CAAC;;IACL,CAAC;IAED,iDAAY,GAAZ,UAAa,MAAc;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAClB,UAAC,KAAK,IAAK,OAAC,KAA2C;aACpD,YAAY,CAAC,MAAM,CAAC,EADZ,CACY,CACxB,CAAC;IACJ,CAAC;IACH,iCAAC;AAAD,CAAC,AA5BD,CAAgD,0BAAc,GA4B7D;AA5BY,gEAA0B","sourcesContent":["import { WebGL2Pipeline } from '../../../pipelines';\nimport { SinglePassGaussianBlurFilterStage } from './SinglePassGaussianBlurFilterStage';\n\n/**\n * @private\n */\nexport class GaussianBlurFilterPipeline extends WebGL2Pipeline {\n  constructor(outputCanvas: OffscreenCanvas | HTMLCanvasElement) {\n    super();\n\n    const glOut = outputCanvas.getContext('webgl2')! as WebGL2RenderingContext;\n\n    this.addStage(new SinglePassGaussianBlurFilterStage(\n      glOut,\n      'horizontal',\n      'texture',\n      0,\n      2\n    ));\n\n    this.addStage(new SinglePassGaussianBlurFilterStage(\n      glOut,\n      'vertical',\n      'canvas',\n      2\n    ));\n  }\n\n  updateRadius(radius: number): void {\n    this._stages.forEach(\n      (stage) => (stage as SinglePassGaussianBlurFilterStage)\n        .updateRadius(radius)\n    );\n  }\n}\n"]}