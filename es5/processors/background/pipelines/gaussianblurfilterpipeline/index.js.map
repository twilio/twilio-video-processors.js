{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/processors/background/pipelines/gaussianblurfilterpipeline/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,gDAAoD;AACpD,yFAAwF;AAExF;;GAEG;AACH;IAAgD,8CAAc;IAK5D,oCAAY,YAAiD,EAAE,gBAAwB;QAAvF,YACE,iBAAO,SAWR;QAhBO,wBAAkB,GAAY,IAAI,CAAC;QAOzC,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAM,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,KAAK,EAAE;YACT,KAAI,CAAC,wBAAwB,CAAC,KAA+B,CAAC,CAAC;SAChE;aAAM;YACL,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,OAAO,CAAC,IAAI,CAAC,yEAAyE,CAAC,CAAC;SACzF;;IACH,CAAC;IAED,2CAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM;YACL,iBAAM,MAAM,WAAE,CAAC;SAChB;IACH,CAAC;IAEO,oDAAe,GAAvB;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;QAC5E,GAAG,CAAC,MAAM,GAAG,eAAQ,IAAI,CAAC,iBAAiB,QAAK,CAAC;IACnD,CAAC;IAEO,6DAAwB,GAAhC,UAAiC,KAA6B;QAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,qEAAiC,CACjD,KAAK,EACL,YAAY,EACZ,SAAS,EACT,CAAC,EACD,CAAC,CACF,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,IAAI,qEAAiC,CACjD,KAAK,EACL,UAAU,EACV,QAAQ,EACR,CAAC,CACF,CAAC,CAAC;IACL,CAAC;IAED,iDAAY,GAAZ,UAAa,MAAc;QACzB,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,0EAA0E;YAC1E,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAClB,UAAC,KAAK,IAAK,OAAC,KAA2C;aACpD,YAAY,CAAC,MAAM,CAAC,EADZ,CACY,CACxB,CAAC;IACJ,CAAC;IAED,4CAAO,GAAP;QACE,IAAG,IAAI,CAAC,kBAAkB,EAAE;YAC1B,iBAAM,OAAO,WAAE,CAAC;SACjB;IACH,CAAC;IACH,iCAAC;AAAD,CAAC,AAlED,CAAgD,0BAAc,GAkE7D;AAlEY,gEAA0B","sourcesContent":["import { WebGL2Pipeline } from '../../../pipelines';\nimport { SinglePassGaussianBlurFilterStage } from './SinglePassGaussianBlurFilterStage';\n\n/**\n * @private\n */\nexport class GaussianBlurFilterPipeline extends WebGL2Pipeline {\n  private _isWebGL2Supported: boolean = true;\n  private _outputCanvas: OffscreenCanvas | HTMLCanvasElement;\n  private _blurFilterRadius: number;\n\n  constructor(outputCanvas: OffscreenCanvas | HTMLCanvasElement, blurFilterRadius: number) {\n    super();\n\n    this._outputCanvas = outputCanvas;\n    this._blurFilterRadius = blurFilterRadius;\n    const glOut = outputCanvas.getContext('webgl2');\n    if (glOut) {\n      this.initializeWebGL2Pipeline(glOut as WebGL2RenderingContext);\n    } else {\n      this._isWebGL2Supported = false;\n      console.warn('Downgraded to Canvas2D for Gaussian blur due to missing WebGL2 support.');\n    }\n  }\n\n  render(): void {\n    if (!this._isWebGL2Supported) {\n      this._renderFallback();\n    } else {\n      super.render();\n    }\n  }\n\n  private _renderFallback(): void {\n    const ctx = this._outputCanvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.filter = `blur(${this._blurFilterRadius}px)`;\n  }\n\n  private initializeWebGL2Pipeline(glOut: WebGL2RenderingContext): void {\n    this.addStage(new SinglePassGaussianBlurFilterStage(\n      glOut,\n      'horizontal',\n      'texture',\n      0,\n      2\n    ));\n\n    this.addStage(new SinglePassGaussianBlurFilterStage(\n      glOut,\n      'vertical',\n      'canvas',\n      2\n    ));\n  }\n\n  updateRadius(radius: number): void {\n    this._blurFilterRadius = radius;\n    if (!this._isWebGL2Supported) {\n      // SinglePassGaussianBlurFilterStage is not supported in Canvas2D fallback\n      return;\n    }\n    this._stages.forEach(\n      (stage) => (stage as SinglePassGaussianBlurFilterStage)\n        .updateRadius(radius)\n    );\n  }\n\n  cleanUp(): void {\n    if(this._isWebGL2Supported) {\n      super.cleanUp();\n    }\n  }\n}\n"]}