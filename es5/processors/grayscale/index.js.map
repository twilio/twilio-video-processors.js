{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/processors/grayscale/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,0CAAyC;AAEzC;;;;GAIG;AACH;IAAwC,sCAAS;IAI/C;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,YAAY,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAChD,CAAC;IAED;;;;OAIG;IACH,yCAAY,GAAZ,UAAa,UAA2B;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAE7C,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,MAAM,GAAG,iBAAiB,CAAC;YACnC,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;YACzE,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACH,yBAAC;AAAD,CAAC,AA1BD,CAAwC,qBAAS,GA0BhD;AA1BY,gDAAkB","sourcesContent":["import { Processor } from '../Processor';\n\n/**\n * @private\n * The [[GrayscaleProcessor]] is a [[Processor]] which applies\n * a grayscale transform to a frame.\n */\nexport class GrayscaleProcessor extends Processor {\n\n  private _outputFrame: OffscreenCanvas;\n\n  constructor() {\n    super();\n    this._outputFrame = new OffscreenCanvas(1, 1);\n  }\n\n  /**\n   * Applies a grayscale transform to the input frame and generate an output frame.\n   * @param inputFrame - The input frame to process.\n   * @returns The outputframe or null if the transform cannot be applied.\n   */\n  processFrame(inputFrame: OffscreenCanvas): OffscreenCanvas | null {\n    this._outputFrame.width = inputFrame.width;\n    this._outputFrame.height = inputFrame.height;\n\n    const context = this._outputFrame.getContext('2d');\n    if (context) {\n      context.filter = 'grayscale(100%)';\n      context.drawImage(inputFrame, 0, 0, inputFrame.width, inputFrame.height);\n      return this._outputFrame;\n    }\n    return null;\n  }\n}\n"]}