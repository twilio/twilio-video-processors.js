{"version":3,"file":"support.js","sourceRoot":"","sources":["../../lib/utils/support.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;GAEG;AACH,SAAS,SAAS;IAChB,OAAO,OAAO,eAAe,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC/G,CAAC;AAED;;GAEG;AACH,SAAgB,kBAAkB;IAChC,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;QACpE,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC7E;SAAM;QACL,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAND,gDAMC;AAED;;GAEG;AACH,SAAgB,qBAAqB;IACnC,OAAO,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;WACpC,OAAO,iBAAiB,KAAK,UAAU,CAAC;AAC/C,CAAC;AAHD,sDAGC;AAED;;GAEG;AACU,QAAA,qBAAqB,GAAG,CAAC;IACpC,IAAM,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAExC,IAAM,cAAc,GAAI,IAAI,SAAS,CAAC,IAAI,iBAAiB,mIACtD,UAAU,SAAK,UAAU,SAAK,UAAU,SACxC,UAAU,SAAK,UAAU,SAAK,UAAU,SACxC,UAAU,SAAK,UAAU,SAAK,UAAU,QAC3C,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEV,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;IAEpE,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC;IAC7B,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAExB,IAAA,IAAI,GAAK,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAArC,CAAsC;IAClD,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,EAAE,CAAC;AAEL;;;;;;;;;;;;;;GAcG;AACU,QAAA,WAAW,GAAG,kBAAkB,EAAE,CAAC","sourcesContent":["/**\n * @private\n */\nfunction getCanvas() {\n  return typeof OffscreenCanvas !== 'undefined' ? new OffscreenCanvas(1, 1) : document.createElement('canvas');\n}\n\n/**\n * @private\n */\nexport function isBrowserSupported() {\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    return !!(getCanvas().getContext('2d') || getCanvas().getContext('webgl2'));\n  } else {\n    return false;\n  }\n}\n\n/**\n * @private\n */\nexport function isChromiumImageBitmap() {\n  return /Chrome/.test(navigator.userAgent)\n    && typeof createImageBitmap === 'function';\n}\n\n/**\n * @private\n */\nexport const isCanvasBlurSupported = (() => {\n  const blackPixel = [0, 0, 0, 255];\n  const whitePixel = [255, 255, 255, 255];\n\n  const inputImageData =  new ImageData(new Uint8ClampedArray([\n    ...blackPixel, ...blackPixel, ...blackPixel,\n    ...blackPixel, ...whitePixel, ...blackPixel,\n    ...blackPixel, ...blackPixel, ...blackPixel\n  ]), 3, 3);\n\n  const canvas = getCanvas();\n  const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n  canvas.width = 3;\n  canvas.height = 3;\n  context.putImageData(inputImageData, 0, 0);\n  context.filter = 'blur(1px)';\n  context.drawImage(canvas, 0, 0);\n\n  const { data } = context.getImageData(0, 0, 3, 3);\n  return data[0] > 0;\n})();\n\n/**\n * Check if the current browser is officially supported by twilio-video-procesors.js.\n * This is set to `true` for browsers that supports canvas\n * [2D](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D) or\n * [webgl2](https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext)\n * rendering context.\n * @example\n * ```ts\n * import { isSupported } from '@twilio/video-processors';\n *\n * if (isSupported) {\n *   // Initialize the background processors\n * }\n * ```\n */\nexport const isSupported = isBrowserSupported();\n"]}